# services:
#   database-postgres:
#     image: postgres
#     container_name: databasehc
#     environment:
#       POSTGRES_DB: sistemahc
#       POSTGRES_USER: neil
#       POSTGRES_PASSWORD: admin123
#     ports:
#       - 5432:5432
#     volumes:
#       - ./postgres_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -q -U $$POSTGRES_USER -d $$POSTGRES_DB"]
#       interval: 5s
#       timeout: 5s
#       retries: 5
#     restart: on-failure
#     networks:
#       - redhc

#   backend-hc:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     image: backendhc-image
#     container_name: backendhc
#     ports:
#       - "4000:4000"
#     depends_on:
#       database-postgres:
#         condition: service_healthy
#     restart: on-failure
#     networks:
#       - redhc

#   frontend-hc:
#     build:
#       context: ./client
#       dockerfile: Dockerfile
#     image: frontendhc-image
#     container_name: frontendhc
#     ports:
#       - "3000:3000"
#       - "5173:5173"
#     depends_on:
#       backend-hc:
#         condition: service_started
#     networks:
#       - redhc
#     restart: on-failure

# networks:
#   redhc:
#     driver: bridge


 version: '3.8'
 services: 
   postgres:
     image: postgres:latest
     restart: always
     environment:
       - POSTGRES_DB=sistemahc
       - POSTGRES_USER=neil
       - POSTGRES_PASSWORD=admin123
     ports:
       - 5432:5432
     volumes:
       - ./postgres_data:/var/lib/postgresql/data